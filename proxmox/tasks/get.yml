---
- name: check if the VM already exists
  proxmox_info:
    api_host: "{{ proxmox.host }}"
    api_user: "{{ proxmox.user }}"
    api_password: "{{ proxmox.password }}"
    filters:
      "tag:Name": "{{ instance_name }}"
  register: proxmox_existing

- name: start servers
  proxmox_kvm:
    api_host: "{{ proxmox.host }}"
    api_user: "{{ proxmox.user }}"
    api_password: "{{ proxmox.password }}"
    vmid: "{{ item.vmid }}"
    state: started
  loop: "{{ proxmox_existing.servers|d([]) }}"

- name: Wait until the QEMU agents are up
  proxmox_wait_for_agent:
    api_host: "{{ proxmox.host }}"
    api_user: "{{ proxmox.user }}"
    api_password: "{{ proxmox.password }}"
    vmid: "{{ item.vmid }}"
  loop: "{{ proxmox_existing.servers|d([]) }}"

- name: retrieve IPs
  proxmox_info:
    api_host: "{{ proxmox.host }}"
    api_user: "{{ proxmox.user }}"
    api_password: "{{ proxmox.password }}"
    filters:
      "tag:Name": "{{ instance_name }}"
  register: proxmox_existing

- name: add to inventory
  add_host:
    name: "{{ item.tags['Name'] }}-{{ item.tags['Index'] }}"
    group: "{{ host_group }}"
    ansible_host: "{{ item.ip_adresses[0] }}"
    ansible_ssh_extra_args: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
    tag_name: "{{ item.tags['Name'] }}"
    tag_index: "{{ item.tags['Index'] }}"
  when: "'Index' in item.tags"
  loop: "{{ proxmox_existing.servers|d([]) }}"
  changed_when: false
- name: add to inventory
  add_host:
    name: "{{ item.tags['Name'] }}"
    group: "{{ host_group }}"
    ansible_host: "{{ item.ip_adresses[0] }}"
    ansible_ssh_extra_args: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
    tag_name: "{{ item.tags['Name'] }}"
  when: "'Index' not in item.tags"    
  loop: "{{ proxmox_existing.servers|d([]) }}"
  changed_when: false
